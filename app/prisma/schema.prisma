generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customers {
  id           String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  phone_number String     @unique @db.VarChar(20)
  created_at   DateTime?  @default(now()) @db.Timestamp(6)
  vouchers     vouchers[]
}

model vendors {
  id           String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String     @db.VarChar(255)
  phone_number String?    @db.VarChar(20)
  created_at   DateTime?  @default(now()) @db.Timestamp(6)
  vouchers     vouchers[]
}

model voucher_logs {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  voucher_id String?   @db.Uuid
  status     String?   @db.VarChar(50)
  message    String?
  created_at DateTime? @default(now()) @db.Timestamp(6)
  vouchers   vouchers? @relation(fields: [voucher_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model vouchers {
  id           String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  code         String         @unique @db.VarChar(50)
  is_redeemed  Boolean?       @default(false)
  redeemed_at  DateTime?      @db.Timestamp(6)
  customer_id  String?        @db.Uuid
  vendor_id    String?        @db.Uuid
  sent         Boolean?       @default(false)
  sent_at      DateTime?      @db.Timestamp(6)
  type         String         @default("daily")
  value        Int            @default(5)
  description  String?
  voucher_logs voucher_logs[]
  customers    customers?     @relation(fields: [customer_id], references: [id], onUpdate: NoAction)
  vendors      vendors?       @relation(fields: [vendor_id], references: [id], onUpdate: NoAction)
}
